openapi: 3.1.0

info:
  title: Vulnerability Testing Python API
  description: API server with various endpoints demonstrating different security vulnerabilities.
  version: 1.0.0

servers:
  - url: /api/

components:
  schemas:
  # Output
    Table:
      type: array
      items:
        type: array

paths:
  /python/sql-injection/union:
    post:
      "tags":
        - "Python"
        - "SQL Injection"
      summary: "SQL Injection: Union"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  description: "Text"
                  example: "1"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/Table'
                    description: "Table"
                    example: [[1, "admin", "admin"]]

  /python/xss/tag:
    post:
      "tags":
        - "Python"
        - "Cross Site Scripting"
      summary: "Cross Site Scripting (XSS): Tag"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                template:
                  type: string
                  description: "Textarea"
                  example: "Template"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    description: "HTML"
                    example: |-  
                      <!DOCTYPE html>
                      <html lang="en">
                      <head>
                          <meta charset="UTF-8">
                          <title>VR Playground</title>
                      </head>
                      <body>
                      <div id="app">
                          <h3>Template</h3>
                      </div>
                      </body>
                      </html>

  /nodejs/nosql-injection:
    post:
      "tags":
        - "NodeJS"
        - "SQL Injection"
      summary: "NO-SQL Injection"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: "Text"
                  example: "admin"
                password:
                  type: string
                  description: "Password"
                  example: "admin"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    description: "Object"
                    example: [
                      {
                        "_id": "65b402a07406871e9e8b3fa3",
                        "id": 1,
                        "__v": 0,
                        "password": "admin",
                        "username": "admin"
                      }
                    ]

  /nodejs/path-traversal:
    get:
      "tags":
        - "NodeJS"
        - "Path Traversal"
      summary: "Path Traversal"
      parameters:
        - in: query
          name: path
          schema:
            type: string
          description: "Text"
          example: "/image.png"
      responses:
        '200':
          description: OK
          content:
              application/octet-stream:
                schema:
                  type: string
                  format: binary
